# Program 1

1. Read in 20 numbers from keyboard.
2. Print the numbers to the console printer.
3. Request a number from the user x. 
4. Search for the number closest to x. 
5. Print the number entered by the user. 
6. Print the number closest to x

## R[0] = user's value
## R[1] = counter (starts at 0) 
## R[2] = 19 
## R[3] = 1001 (user number index)

Instructions will start at 0. 


# 1. Read in one character or number from console keyboard (Address 0)
IN 0, 0

# 2. Print out the number to console printer
OUT 0, 1

# 3. Store the number to memory
STR 0, 0, 0, 1001[,0]

# 4. Load counter into R[1]
LDA 1, 0, 0, 0[,0] 

# 5. Load 20 into R[2]
LDA 2, 0, 0, 19[,0]

# 6. Load 1001 into R[3]
LDA 3, 0, 0, 1001[,0]

# 7. Subtract 1 from R[3]
SIR 2, 1

# 8. Add 1 to user Number Index
AIR 3, 1

# 9. Jump on not equal to 0 to (Address 0)
JNE 2, 0, 0[,0]

-----------------------------------------------------

# 10. get the number from the user
# R[0] will have user's number
IN 0, 0

# 11. Store the user's number into (Address 1021)
STR 0, 0, 1021[,0]

# 12. Load the user's 20 numbers into R[1]
LDR 1, 0, 1001[,0]

# 13. Subtract 1001 (user's 20 numbers) from R[0] (user's number)
SMR 0, 0, 1001[,1]

# 14. Jump if 0 to end and print out the user's number 
JZ 0, 0, (end of code)[,1]

# 15. Jump on greater than or equal to 0 (difference is positive)
JGE 0, 0, (somewhere further down)[,1]

# 17. Subtract 1021 (user's number) from R[1] (user's 20 numbers)
SMR 1, 0, 1021[,1]

# 18. Store the difference into memory
STR 1, 0, 1022[,0]

[[[# 19.store the index of the searching number
STR 3, 0, 1024[,0]]]] have to discuse
------------------------------------------------------

# 19. Store the counter
LDR 2, 0, 19[,0]

# 20. Store the index for each of the twenty numbers
LDR 3, 0, 1002[,0]

------------------------------------------------------

# 21. Load user's number into R[0] 
LDR 0, 0, 1021[,0]

# 22. Subtract 1002 (user's 20 numbers) from R[0] (user's number)
SMR 0, 0, 1002[,1]

# 23. Jump if 0 to end and print out the user's number 
JZ 0, 0, (end of code)[,1]

# 24. Jump on greater than or equal to 0 (difference is positive)
JGE 0, 0, (somewhere further down)[,1]

# 25. Subtract 1021 (user's number) from R[1] (user's 20 numbers)
SMR 1, 0, 1021[,1]

# 26. Store the difference into memory
STR 1, 0, 1023[,0]

--------------------------------------------------------

# 27. Load minimum difference into R[0]
LDR 0, 0, 1022[,0]

# 28. Subtract 1023 (second difference) from R[0] (minimum difference)
SMR 0, 0, 1023[,1]

# 29. counter
AIR 2, 1
AIR 3, 1

# 30. Jump on greater than 0 (minimum difference is larger)
JGE 0, 0, (32)[,1]

# 31. 
JNE 2, 0, 21[,1]

# 32. 
LDR 0, 0, 1023[,0]

# 33. override minimum difference with 
STR 0, 0, 1022[,0]

# 34.store the index of the searching number
STR 3, 0, 1024[,0]

# 35. 
JNE 2, 0, 21[,1]

